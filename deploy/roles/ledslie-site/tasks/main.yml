- name: Copy the files to the machine.
  synchronize:
    src: ../ledslie
    dest: "/home/{{ ansible_user }}/src/"

- name: Install system dependencies
  apt:
    name: "{{ item }}"
  with_items:
    - python3-dev
    - libjpeg-dev
    - libfreetype6-dev
    - libtiff-dev
    - libwebp-dev
    - liblcms2-dev
    - zlib1g-dev
    - nginx
  become: yes

- name: Install ledslie dependencies
  pip:
    requirements: "/home/{{ ansible_user }}/src/ledslie/requirements.txt"
    virtualenv: "/home/{{ ansible_user }}/pyenv"

- name: Install the Ledslie software.
  command: "/home/{{ ansible_user }}/pyenv/bin/python setup.py install"
  args:
    chdir: "/home/{{ ansible_user }}/src/ledslie"

- name: Forcing a flup package to install again
  pip:
    name: git+https://github.com/pquentin/flup-py3.git#egg=flup-py3
    state: forcereinstall
    virtualenv: "/home/{{ ansible_user }}/pyenv"

- name: Create /var/run/ledslie directory
  file:
    path: /var/run/ledslie
    state: directory
    owner: "{{ ansible_user }}"
    group: www-data
    mode: 0771
  become: yes

- name: Installing /etc/default/ledslie
  template:
    src: defaults-ledslie
    dest: /etc/default/ledslie
  become: yes

- name: Installing systemd templates
  template:
    src: ledslie-site.service
    dest: /etc/systemd/system/ledslie-site.service
  become: yes

- name: Start ledslie site services
  systemd:
    name: ledslie-site
    state: restarted
    enabled: yes
  become: yes

- name: Copy nginx configuration
  template:
    src: nginx-ledslie.conf
    dest: /etc/nginx/sites-available/ledslie.conf
  become: yes

- name: Enabling nginx Ledslie configuration
  file:
    state: link
    path:  /etc/nginx/sites-enabled/ledslie.conf
    src: /etc/nginx/sites-available/ledslie.conf
  become: yes

- name: Restart nginx.
  systemd:
    name: nginx
    state: restarted
    enabled: yes
  become: yes
